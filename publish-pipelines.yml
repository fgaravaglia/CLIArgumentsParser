pool:
  vmImage: "windows-latest"

#name: Umbrella.Core-Publish

parameters:
  - name: MajorVersion
    displayName: "Major Version"
    default: 1

  - name: MinorVersion
    displayName: "Minor Version"
    default: 2

  - name: PublishPackage
    displayName: "Publish Package to Nuget.Org"
    type: booelan
    default: False

variables:
  buildConfiguration: "Release"
  targetFramework: "6.x"
  nugetVersion: ${{ parameters.MajorVersion }}.${{ parameters.MinorVersion }}.$(Build.BuildId)

steps:
  ##### use the right version of .Net core
  - task: UseDotNet@2
    displayName: Use .NET target version
    inputs:
      packageType: "sdk"
      version: $(targetFramework)

  - template: .\Templates\dotnet-package-pack.yaml
    parameters:
      projPath: src/CliArgumentParser
      projName: CliArgumentParser
      MajorVersion: ${{ parameters.MajorVersion }}
      MinorVersion: ${{ parameters.MinorVersion }}
      buildNumber: $(Build.BuildId)

  - template: .\devops\templates\dotnet-build.yaml
    parameters:
      projPath: src/CliArgumentParser.Tests
      projName: CliArgumentParser.Tests
      publishRequired: false

  ############################## TEST #################################
  - template: .\devops\templates\dotnet-test.yaml
    parameters:
      projPath: src/CliArgumentParser.Tests
      projName: CliArgumentParser.Tests

  ############################## PUBLISH DROP #################################
  - task: PublishBuildArtifacts@1
    displayName: publish artifacts
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      ArtifactName: "drop"
      publishLocation: "Container"

  - task: DotNetCoreCLI@2
    displayName: Push
    inputs:
      command: "push"
      packagesToPush: "$(Build.ArtifactStagingDirectory)/*.nupkg"
      nuGetFeedType: "external"
      publishFeedCredentials: "Nuget.org"
      allowPackageConflicts: true
    condition: eq(${{ parameters.PublishPackage }}, true)
